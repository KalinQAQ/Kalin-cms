{"version":3,"sources":["webpack:///./src/hooks/use-page-search.ts","webpack:///./src/hooks/use-page-modal.ts","webpack:///./src/components/page-modal/src/page-modal.vue","webpack:///./src/components/page-modal/src/page-modal.vue?5234","webpack:///./src/components/page-modal/src/page-modal.vue?5cb7","webpack:///./src/components/page-modal/index.ts","webpack:///./src/views/main/system/user/user.vue","webpack:///./src/views/main/system/user/config/search.config.ts","webpack:///./src/views/main/system/user/config/content.config.ts","webpack:///./src/views/main/system/user/config/modal.config.ts","webpack:///./src/views/main/system/user/user.vue?a451","webpack:///./src/views/main/system/user/user.vue?6466","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["usePageSearch","pageContentRef","handleResetClick","value","getPageData","handleQueryClick","queryInfo","usePageModal","newCb","editCb","pageModalRef","defaultInfo","handleNewData","dialogVisible","handleEditData","item","class","title","width","center","destroy-on-close","footer","type","handleConfirmClick","formData","components","HyForm","props","modalConfig","Object","required","default","otherInfo","pageName","String","require","setup","newValue","formItems","field","store","keys","length","console","log","dispatch","editData","id","newData","render","searchFormConfig","ref","contentTableConfig","modalConfigRef","labelWidth","itemStyle","padding","colLayout","span","label","placeholder","options","otherOptions","startPlaceholder","endPlaceholder","propList","prop","minWidth","slotName","showIndexColumn","showSelectColumn","isHidden","name","PageSearch","PageContent","PageModal","newCallback","passwordItem","find","editCallback","departmentItem","state","entireDepartment","map","roleItem","entireRole","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn","this","arguments","undefined"],"mappings":"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","file":"js/chunk-4e899eb8.9ba9a0fa.js","sourcesContent":["import { ref } from 'vue'\nimport PageContent from '@/components/page-content'\n\nexport function usePageSearch() {\n  const pageContentRef = ref<InstanceType<typeof PageContent>>()\n  const handleResetClick = () => {\n    pageContentRef.value?.getPageData()\n  }\n  const handleQueryClick = (queryInfo: any) => {\n    pageContentRef.value?.getPageData(queryInfo)\n  }\n  return [pageContentRef, handleResetClick, handleQueryClick]\n}\n","import { ref } from 'vue'\nimport PageModal from '@/components/page-modal'\n\ntype CallbackFn = (item?: any) => void\n\nexport function usePageModal(newCb?: CallbackFn, editCb?: CallbackFn) {\n  const pageModalRef = ref<InstanceType<typeof PageModal>>()\n  const defaultInfo = ref({})\n  const handleNewData = () => {\n    defaultInfo.value = {}\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    newCb && newCb()\n  }\n  const handleEditData = (item: any) => {\n    defaultInfo.value = { ...item }\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    editCb && editCb(item)\n  }\n  return [pageModalRef, defaultInfo, handleNewData, handleEditData]\n}\n","<template>\n  <div class=\"page-modal\">\n    <el-dialog\n      title=\"新建用户\"\n      v-model=\"dialogVisible\"\n      width=\"30%\"\n      center\n      destroy-on-close\n    >\n      <hy-form v-bind=\"modalConfig\" v-model=\"formData\"></hy-form>\n      <slot></slot>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"handleConfirmClick\">\n            确 定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nimport HyForm from '@/base-ui/form'\n\nexport default defineComponent({\n  components: {\n    HyForm\n  },\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      require: true\n    }\n  },\n  setup(props) {\n    const dialogVisible = ref(false)\n    const formData = ref<any>({})\n\n    watch(\n      () => props.defaultInfo,\n      (newValue) => {\n        for (const item of props.modalConfig.formItems) {\n          formData.value[`${item.field}`] = newValue[`${item.field}`]\n        }\n      }\n    )\n\n    // 点击确定按钮的逻辑\n    const store = useStore()\n    const handleConfirmClick = () => {\n      dialogVisible.value = false\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑\n        console.log('编辑用户')\n        store.dispatch('system/editPageDataAction', {\n          pageName: props.pageName,\n          editData: { ...formData.value, ...props.otherInfo },\n          id: props.defaultInfo.id\n        })\n      } else {\n        // 新建\n        console.log('新建用户')\n        store.dispatch('system/createPageDataAction', {\n          pageName: props.pageName,\n          newData: { ...formData.value, ...props.otherInfo }\n        })\n      }\n    }\n\n    return {\n      dialogVisible,\n      formData,\n      handleConfirmClick\n    }\n  }\n})\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nimport HyForm from '@/base-ui/form'\n\nexport default defineComponent({\n  components: {\n    HyForm\n  },\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      require: true\n    }\n  },\n  setup(props) {\n    const dialogVisible = ref(false)\n    const formData = ref<any>({})\n\n    watch(\n      () => props.defaultInfo,\n      (newValue) => {\n        for (const item of props.modalConfig.formItems) {\n          formData.value[`${item.field}`] = newValue[`${item.field}`]\n        }\n      }\n    )\n\n    // 点击确定按钮的逻辑\n    const store = useStore()\n    const handleConfirmClick = () => {\n      dialogVisible.value = false\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑\n        console.log('编辑用户')\n        store.dispatch('system/editPageDataAction', {\n          pageName: props.pageName,\n          editData: { ...formData.value, ...props.otherInfo },\n          id: props.defaultInfo.id\n        })\n      } else {\n        // 新建\n        console.log('新建用户')\n        store.dispatch('system/createPageDataAction', {\n          pageName: props.pageName,\n          newData: { ...formData.value, ...props.otherInfo }\n        })\n      }\n    }\n\n    return {\n      dialogVisible,\n      formData,\n      handleConfirmClick\n    }\n  }\n})\n","import { render } from \"./page-modal.vue?vue&type=template&id=6dada2c0\"\nimport script from \"./page-modal.vue?vue&type=script&lang=ts\"\nexport * from \"./page-modal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import PageModal from './src/page-modal.vue'\n\nexport default PageModal\n","<template>\n  <div class=\"user\">\n    <page-search\n      :searchFormConfig=\"searchFormConfig\"\n      @resetBtnClick=\"handleResetClick\"\n      @queryBtnClick=\"handleQueryClick\"\n    />\n    <page-content\n      ref=\"pageContentRef\"\n      :contentTableConfig=\"contentTableConfig\"\n      pageName=\"users\"\n      @newBtnClick=\"handleNewData\"\n      @editBtnClick=\"handleEditData\"\n    ></page-content>\n    <page-modal\n      :defaultInfo=\"defaultInfo\"\n      ref=\"pageModalRef\"\n      pageName=\"users\"\n      :modalConfig=\"modalConfigRef\"\n    ></page-modal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useStore } from '@/store'\n\nimport PageSearch from '@/components/page-search'\nimport PageContent from '@/components/page-content'\nimport PageModal from '@/components/page-modal'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nimport { usePageSearch } from '@/hooks/use-page-search'\nimport { usePageModal } from '@/hooks/use-page-modal'\n\nexport default defineComponent({\n  name: 'users',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n  setup() {\n    const [pageContentRef, handleResetClick, handleQueryClick] = usePageSearch()\n\n    // pageModal相关的hook逻辑\n    // 1.处理密码的逻辑\n    const newCallback = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = false\n    }\n    const editCallback = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = true\n    }\n\n    // 2.动态添加部门和角色列表\n    const store = useStore()\n    const modalConfigRef = computed(() => {\n      const departmentItem = modalConfig.formItems.find(\n        (item) => item.field === 'departmentId'\n      )\n      departmentItem!.options = store.state.entireDepartment.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n      const roleItem = modalConfig.formItems.find(\n        (item) => item.field === 'roleId'\n      )\n      roleItem!.options = store.state.entireRole.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n      return modalConfig\n    })\n\n    // 3.调用hook获取公共变量和函数\n    const [pageModalRef, defaultInfo, handleNewData, handleEditData] =\n      usePageModal(newCallback, editCallback)\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      pageContentRef,\n      handleResetClick,\n      handleQueryClick,\n      modalConfigRef,\n      handleNewData,\n      handleEditData,\n      pageModalRef,\n      defaultInfo\n    }\n  }\n})\n</script>\n\n<style scoped></style>\n","import { IForm } from '@/base-ui/form'\n\nexport const searchFormConfig: IForm = {\n  labelWidth: '120px',\n  itemStyle: {\n    padding: '10px 40px'\n  },\n  colLayout: {\n    span: 8\n  },\n  formItems: [\n    {\n      field: 'id',\n      type: 'input',\n      label: 'id',\n      placeholder: '请输入id'\n    },\n    {\n      field: 'name',\n      type: 'input',\n      label: '用户名',\n      placeholder: '请输入用户名'\n    },\n    {\n      field: 'realname',\n      type: 'input',\n      label: '真实姓名',\n      placeholder: '请输入真实姓名'\n    },\n    {\n      field: 'cellphone',\n      type: 'input',\n      label: '电话号码',\n      placeholder: '请输入电话号码'\n    },\n    {\n      field: 'enable',\n      type: 'select',\n      label: '用户状态',\n      placeholder: '请选择用户状态',\n      options: [\n        { title: '启用', value: 1 },\n        { title: '禁用', value: 0 }\n      ]\n    },\n    {\n      field: 'createAt',\n      type: 'datepicker',\n      label: '创建时间',\n      otherOptions: {\n        startPlaceholder: '开始时间',\n        endPlaceholder: '结束时间',\n        type: 'daterange'\n      }\n    }\n  ]\n}\n","export const contentTableConfig = {\n  title: '用户列表',\n  propList: [\n    { prop: 'name', label: '用户名', minWidth: '100' },\n    { prop: 'realname', label: '真实姓名', minWidth: '100' },\n    { prop: 'cellphone', label: '手机号码', minWidth: '100' },\n    { prop: 'enable', label: '状态', minWidth: '100', slotName: 'status' },\n    {\n      prop: 'createAt',\n      label: '创建时间',\n      minWidth: '250',\n      slotName: 'createAt'\n    },\n    {\n      prop: 'updateAt',\n      label: '更新时间',\n      minWidth: '250',\n      slotName: 'updateAt'\n    },\n    { label: '操作', minWidth: '120', slotName: 'handler' }\n  ],\n  showIndexColumn: true,\n  showSelectColumn: true\n}\n","import { IForm } from '@/base-ui/form'\n\nexport const modalConfig: IForm = {\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '用户名',\n      placeholder: '请输入用户名'\n    },\n    {\n      field: 'realname',\n      type: 'input',\n      label: '真实姓名',\n      placeholder: '请输入真实姓名'\n    },\n    {\n      field: 'password',\n      type: 'password',\n      label: '用户密码',\n      placeholder: '请输入密码',\n      isHidden: false\n    },\n    {\n      field: 'cellphone',\n      type: 'input',\n      label: '电话号码',\n      placeholder: '请输入电话号码'\n    },\n    {\n      field: 'departmentId',\n      type: 'select',\n      label: '选择部门',\n      placeholder: '请选择部门',\n      options: []\n    },\n    {\n      field: 'roleId',\n      type: 'select',\n      label: '选择角色',\n      placeholder: '请选择角色',\n      options: []\n    }\n  ],\n  colLayout: { span: 24 },\n  itemStyle: {}\n}\n","\nimport { defineComponent, computed } from 'vue'\nimport { useStore } from '@/store'\n\nimport PageSearch from '@/components/page-search'\nimport PageContent from '@/components/page-content'\nimport PageModal from '@/components/page-modal'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nimport { usePageSearch } from '@/hooks/use-page-search'\nimport { usePageModal } from '@/hooks/use-page-modal'\n\nexport default defineComponent({\n  name: 'users',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n  setup() {\n    const [pageContentRef, handleResetClick, handleQueryClick] = usePageSearch()\n\n    // pageModal相关的hook逻辑\n    // 1.处理密码的逻辑\n    const newCallback = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = false\n    }\n    const editCallback = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = true\n    }\n\n    // 2.动态添加部门和角色列表\n    const store = useStore()\n    const modalConfigRef = computed(() => {\n      const departmentItem = modalConfig.formItems.find(\n        (item) => item.field === 'departmentId'\n      )\n      departmentItem!.options = store.state.entireDepartment.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n      const roleItem = modalConfig.formItems.find(\n        (item) => item.field === 'roleId'\n      )\n      roleItem!.options = store.state.entireRole.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n      return modalConfig\n    })\n\n    // 3.调用hook获取公共变量和函数\n    const [pageModalRef, defaultInfo, handleNewData, handleEditData] =\n      usePageModal(newCallback, editCallback)\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      pageContentRef,\n      handleResetClick,\n      handleQueryClick,\n      modalConfigRef,\n      handleNewData,\n      handleEditData,\n      pageModalRef,\n      defaultInfo\n    }\n  }\n})\n","import { render } from \"./user.vue?vue&type=template&id=b7e6da3a\"\nimport script from \"./user.vue?vue&type=script&lang=ts\"\nexport * from \"./user.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}